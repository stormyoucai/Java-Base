1、什么是RPC？
RPC 的全称是 Remote Procedure Call 是一种进程间通信方式。
它允许程序调用另一个地址空间（通常是共享网络的另一台机器上）的过程或函数，
而不用程序员显式编码这个远程调用的细节。即程序员无论是调用本地的还是远程的，本质上编写的调用代码基本相同。

RPC是指远程过程调用，也就是说两台服务器A，B，一个应用部署在A服务器上，想要调用B服务器上应用提供的函数/方法，由于
不在一个内存空间，不能直接调用，需要通过网络来表达调用的语义和传达调用的数据。

2、RPC 结构（stub：存根）
user 就是 client 端，当 user 想发起一个远程调用时，它实际是通过本地调用 user-stub。
user-stub 负责将调用的接口、方法和参数通过约定的协议规范进行编码并通过本地的 RPCRuntime 实例传输到远端的实例。
远端 RPCRuntime 实例收到请求后交给 server-stub 进行解码后发起本地端调用，调用结果再返回给 user 端。

3、RPC框架选择考虑因素
1. 性能指标
2. 是否需要跨语言平台
3. 内网开放还是公网开放
4. 开源 RPC 框架本身的质量、社区活跃度

4、RPC 功能目标
RPC 的主要功能目标是让构建分布式计算（应用）更容易，在提供强大的远程调用能力时不损失本地调用的语义简洁性。

5、异步和同步的区分在于是否等待服务端执行完成并返回结果


参考博客：
1、浅出
http://blog.csdn.net/mindfloating/article/details/39473807
2、深入
http://blog.csdn.net/mindfloating/article/details/39474123